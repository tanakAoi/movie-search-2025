generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model User {
  id            String      @id @default(cuid())
  name          String?
  email         String?     @unique
  emailVerified DateTime?
  image         String?
  username      String?
  avatar        String?
  country       Json?
  language      Json?
  accounts      Account[]
  Favorite      Favorite[]
  sessions      Session[]
  Watchlist     Watchlist[]
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?
  user              User    @relation(fields: [userId], references: [id])

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id])
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model Favorite {
  id         String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  created_at DateTime @default(now()) @db.Timestamptz(6)
  user_id    String?
  movie_id   String?
  Movie      Movie?   @relation(fields: [movie_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  User       User?    @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model Movie {
  id           String      @id(map: "movie_pkey")
  created_at   DateTime    @default(now()) @db.Timestamptz(6)
  title        String?
  poster_path  String?
  last_fetched DateTime?   @db.Timestamp(6)
  Favorite     Favorite[]
  Watchlist    Watchlist[]
}

model Watchlist {
  id         String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  created_at DateTime @default(now()) @db.Timestamptz(6)
  user_id    String?
  movie_id   String?
  Movie      Movie?   @relation(fields: [movie_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  User       User?    @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}
